INSTRUCTIONS FOR INSTALLING CGNS PACKAGE IN UBUNTU 64-bit
(Installing this library in 32-bit ubuntu will restrict the fuctionality of your library in terms of opening cgns files written in 64-bit format)

The cgns library is an essential library required for the code to run. Here are the instructions to install it in 64-bit Ubuntu. 
For other linux packages the instructions shouldn't differ greatly.

Before you follow the instructions below, the following packages must be installed:

use sudo apt-get install <package name> to install these.
1. hdf5 

sudo apt-get install hdf5-helpers
sudo apt-get install libhdf5-7:amd64
sudo apt-get install libhdf5-dev

2. tcl

sudo apt-get install libqtassistantclient4:amd64
sudo apt-get install libtcl8.5:amd64
sudo apt-get install libtcl8.6:amd64
sudo apt-get install tcl
sudo apt-get install tcl-dev:amd64
sudo apt-get install tcl8.5
sudo apt-get install tcl8.6
sudo apt-get install tcl8.6-dev:amd64

3. tk

sudo apt-get install libtk8.5:amd64
sudo apt-get install libtk8.6:amd64
sudo apt-get install tk
sudo apt-get install tk-dev:amd64
sudo apt-get install tk8.5      
sudo apt-get install tk8.6
sudo apt-get install tk8.6-dev:amd64


also make sure you have the correct gtk libraries. usually they are installed by default. 

3. cmake 

sudo apt-get install cmake
sudo apt-get install cmake-curses-gui
sudo apt-get install camke-data

4. xmu libraries for openGL support

sudo apt-get install libxmu-dev:amd64
sudo apt-get install libxmu-headers
sudo apt-get install libxmu6:amd64   
sudo apt-get install libxmu6-dbg:amd64
sudo apt-get install libxmuu-dev:amd64
sudo apt-get install libxmuu1:amd64

some of them might be unnecessary, but I have listed them as they made the case for compiling cgnstools succesfull. 

Also some of these, depending on your graphics card and type of OS. Mine was intel graphics card hence, i skipped the nvidia libraries. 

sudo apt-get install linux-headers-amd64
sudo apt-get install nvidia-kernel-dkms
sudo apt-get install firmware-linux-free
sudo apt-get install nvidia-glx
sudo apt-get install nvidia-cuda-toolkit
sudo apt-get install libglu1-mesa-dev
sudo apt-get install libglw1-mesa-dev
sudo apt-get install libxmu-dev
sudo apt-get install mesa-utils
sudo apt-get install mesa-utils-extra

Note: Please do a throrough research on what kind of graphics packages does your nvidia card use in compatibility with ubuntu before
installing them, as installing the wrong ones will lead to issues with even basic Gnome functions.
After installing the above libraries one may proceed to follow the instructions below. These instructions were part of the default
instructions in the cgnslib available for download from the cgns website. 

http://sourceforge.net/projects/cgns/files/cgnslib_3.2/cgnslib_3.2.1.tar.gz/download

  Installation Instructions using cmake
(can also still use configure instead... see src/README.config)

1. Install HDF5 on your system

  (a) HDF5 uses the standard GNU autotools, so './configure', 
    'make', 'sudo make install' should install HDF5 without 
    problems on most systems.

2. Unpack the tar ball containing the source code into some 
  directory.

3. Create a new director in which to build the library.

4. Use cmake to initialize the build tree.

  user@hostname:build_path$ cmake /path/to/cgns/sources/

In case the above command doesn't work for you, here's a version that worked for me:

  user@hostname:build_path$ cmake /path/to/cgns

this means just the path to the main folder of cgnslib. Not to the folder src inside it. 

5. Use ccmake to edit the control variables as needed.

  user@hostname:build_path$ ccmake .


  (a) The paths to the HDF5 libraries and header files must be 
    set in 'HDF5_LIBRARY_DIR' and 'HDF5_INCLUDE_DIR' 
    respectively.

    i. If HDF5 is built with parallel-IO support via MPI, the 
      'HDF5_NEEDS_MPI' flag must be set to true.

    ii. If HDF5 is built with zlib and szip support, these need 
      to be flagged with 'HDF5_NEEDS_ZLIB' and 'HDF5_NEEDS_SZIP' 
      as well as the paths for those libraries.

  (b) Fortran can be enabled by toggling the 'CGNS_ENABLE_FORTRAN' 
    variable.

    i. A view of the attempt to autodetect the correct interface 
      between Fortran and C is show, setting the value of 
      'FORTRAN_NAMING'.

    ii. For gfortran and pgf90 the value of 'FORTRAN_NAMING' 
      shoud be 'LOWERCASE_'.

  (c) The build system must be reconfigured after variable 
    changes by pressing 'c'. Variables who's value has changed 
    are maked with a '*' in the interface.

  (d) After configuration, the Makefiles must be generated by 
    pressing 'g'.

6. Use make to build the library.

  user@hostname:build_path$ make


  (a) A colorized review of the build process should follow.

7. Installation of the library is accomplished with the 'install' 
  target of the makefile.

  user@hostname:build_path$ make install


  (a) You must have permissions to alter the directory where cgns 
    will be installed.

you might get an error in this step. Most probably this is because of the cmake file trying to install the final library in usr/local/bin and it doesn't have the permission to do so. Also change this one might have to change the configuration of the cmake file. However this being too messy, it's easier to just run the tools from the usr/local/bin . Hence just modify the last command to:

  user@hostname:build_path$ sudo make install



And it will install the cgnstools in the usr/local/bin
For ex. to run cgnsview, just type:

usr/local/bin/cgnsview
usr/local/bin/cgnsplot 

